; -------------------------------------------
; DO NOT EDIT THIS FILE BY HAND !
; -------------------------------------------
[OPTIONS]
Username=
DateFormat=
ProcedureHeaderBelowDeclaration=1
Language=0
XSLFileName=sample.xsl
OpenXMLFileAfterCreation=2
MaxNumberOfCharactersPerLine=76
UseUniqueLineNumbersInProject=0
KeepActiveWindowOpenWhenClosingWindows=0
LineNumberIncrement=10

[TOOLBAR_BUTTONS_VISIBILITY]
ButtonCopyControlWithCodeVisible=1
ButtonPasteControlWithCodeVisible=1
ButtonFindVisible=1
ButtonProcedureCallersVisible=1
ButtonAddProcedureVisible=1
ButtonAddCodeTemplateVisible=1
ButtonAddModuleHeaderVisible=1
ButtonAddProcedureHeaderVisible=1
ButtonAddErrorHandlerVisible=1
ButtonAddProcedureHeaderAndErrorHandlerVisible=1
ButtonAddLineNumberVisible=1
ButtonRemoveLineNumberVisible=1
ButtonSplitLinesVisible=1
ButtonCombineLinesVisible=1
ButtonAddProcedureToFavoritesVisible=1
ButtonGoToFavoriteProcedureVisible=1
ButtonSelectCaseAssistantVisible=1
ButtonClearImmediateWindowVisible=1
ButtonCloseWindowsVisible=1
ButtonCollapseProjectsVisible=1
ButtonOptionsVisible=1

[SUFFIX]
ResultVariableSuffix=Rtn

[PREFIX]
MemberVariablePrefix=m
StringPrefix=s
IntegerPrefix=i
LongPrefix=l
DatePrefix=d
BooleanPrefix=b
VariantPrefix=v
CurrencyPrefix=cur
DoublePrefix=dbl
SinglePrefix=sng
BytePrefix=byt
CollectionPrefix=col
ControlPrefix=ctl
ObjectPrefix=obj
EnumPrefix=e

[SHORTCUTS]
ShortcutCopyControlWithCode=
ShortcutPasteControlWithCode=
ShortcutFind=
ShortcutProcedureCallers=
ShortcutAddProcedure=
ShortcutAddCodeTemplate=
ShortcutAddModuleHeader=
ShortcutAddProcedureHeader=
ShortcutAddErrorHandler=
ShortcutAddProcedureHeaderAndErrorHandler=
ShortcutAddLineNumber=
ShortcutRemoveLineNumber=
ShortcutSplitLines=
ShortcutCombineLines=
ShortcutAddProcedureToFavorites=
ShortcutGoToFavoriteProcedure=
ShortcutSelectCaseAssistant=
ShortcutCloseWindows=
ShortcutCollapseProjects=
ShortcutCopyToPrivateClipboard=
ShortcutCopyToPrivateClipboard1=
ShortcutCopyToPrivateClipboard2=
ShortcutCopyToPrivateClipboard3=
ShortcutCopyToPrivateClipboard4=
ShortcutCopyToPrivateClipboard5=
ShortcutCopyToPrivateClipboard6=
ShortcutCopyToPrivateClipboard7=
ShortcutCopyToPrivateClipboard8=
ShortcutCopyToPrivateClipboard9=
ShortcutPasteFromPrivateClipboard=
ShortcutPasteFromPrivateClipboard1=
ShortcutPasteFromPrivateClipboard2=
ShortcutPasteFromPrivateClipboard3=
ShortcutPasteFromPrivateClipboard4=
ShortcutPasteFromPrivateClipboard5=
ShortcutPasteFromPrivateClipboard6=
ShortcutPasteFromPrivateClipboard7=
ShortcutPasteFromPrivateClipboard8=
ShortcutPasteFromPrivateClipboard9=
ShortcutConvertSelectionToUpperCase=
ShortcutConvertSelectionToLowerCase=
ShortcutConvertPublicVariableToProperty=
ShortcutStatistics=
ShortcutReviewSourceCode=
ShortcutGenerateXMLDoc=
ShortcutSortProcedures=
ShortcutMsgBoxAssistant=
ShortcutOptions=
ShortcutCommentBlock=
ShortcutUncommentBlock=
ShortcutToggleBookmark=
ShortcutNextBookmark=
ShortcutPreviousBookmark=
ShortcutClearAllBookmarks=
ShortcutToggleLocalsWindowVisibility=
ShortcutToggleWatchWindowVisibility=
ShortcutLastResultsWindowUsed=

[EXTERNAL_UTILITY1]
Description=Beyond Compare
Command=C:\Program Files (x86)\Beyond Compare 3\BCompare.exe
Parameters=
Maximized=0

[EXTERNAL_UTILITY2]
Description=Custom UI Editor For Microsoft Office
Command=C:\Program Files (x86)\CustomUIEditor\CustomUIEditor.exe
Parameters=
Maximized=0

[EXTERNAL_UTILITY3]
Description=Notepad++
Command=C:\Program Files (x86)\Notepad++\notepad++.exe
Parameters=
Maximized=0

[EXTERNAL_UTILITY4]
Description=XML Notepad 2007
Command=C:\Program Files (x86)\XML Notepad 2007\XmlNotepad.exe
Parameters=
Maximized=0


[MODULE_HEADER]
' ==========================================================================
' Module      : {MODULE_NAME}
' Type        : {MODULE_TYPE}
' Description :
' --------------------------------------------------------------------------
' Properties  : XXX
' --------------------------------------------------------------------------
' Procedures  : XXX
' --------------------------------------------------------------------------
' Events      : XXX
' --------------------------------------------------------------------------
' Dependencies: XXX
' --------------------------------------------------------------------------
' References  : XXX
' --------------------------------------------------------------------------
' Comments    :
' ==========================================================================

' -----------------------------------
' Option statements
' -----------------------------------

'Option Base \{0 | 1}
'Option Compare \{Binary | Text | Database} ' Microsoft Access only
Option Explicit
Option Private Module

' -----------------------------------
' Interface declarations
' -----------------------------------

'Implements IUnknown

' -----------------------------------
' Constant declarations
' -----------------------------------
' Global Level
' ----------------

'Public Const GLOBAL_CONST As String = ""

' ----------------
' Module Level
' ----------------

Private Const msMODULE As String = "{MODULE_NAME}"

' -----------------------------------
' Enumeration declarations
' -----------------------------------
' Global Level
' ----------------

'Public Enum enuGlobal
'    enuGItem = 0
'End Enum

' ----------------
' Module Level
' ----------------

'Private Enum enuMod
'    enuMItem = 0
'End Enum

' -----------------------------------
' Type declarations
' -----------------------------------
' Global Level
' ----------------

'Public Type TPublic
'    PublicID    As Integer
'End Type

' ----------------
' Module Level
' ----------------

'Private Type TPrivate
'    PrivateID   As Integer
'End Type

' -----------------------------------
' Event declarations
' -----------------------------------

'[Public] Event EventName(ByVal Arg As String)

' -----------------------------------
' External Function declarations
' -----------------------------------

'#If VBA7 Then
'    Private Declare PtrSafe _
'            Function <FunctionName> _
'            Lib "user32" _
'            Alias "" (ByVal hWnd As LongPtr) As LongPtr
'#Else
'    Private Declare _
'            Function <FunctionName> _
'            Lib "user32" _
'            Alias "" (ByVal hWnd As Long) As Long
'#End If

' -----------------------------------
' Variable declarations
' -----------------------------------
' Global Level
' ----------------

'Public gsVar    As String

' ----------------
' Module Level
' ----------------

'Private msVar   As String

[PROCEDURE_HEADER]
' ==========================================================================
' Description : [Enter description]
'
' Parameters  : 
'
' Returns     : {FUNCTION_RETURN_TYPE_NAME}
'
' Comments    :
' ==========================================================================

    Const sPROC As String = "{PROCEDURE_NAME}"

    Dim {FUNCTION_RETURN_TYPE_PREFIX}Rtn    As {FUNCTION_RETURN_TYPE_NAME}

[ERROR_HANDLER]
    Dim udtAppProps As TApplicationProperties

    On Error GoTo PROC_ERR
    Call Trace(tlMaximum, msMODULE, sPROC, gsPROC_ENTER)

    ' Save application state
    ' ----------------------
    Call GetApplicationProperties(udtAppProps)
    Application.ScreenUpdating = gbDEBUG_MODE

    {PROCEDURE_BODY}

    ' ----------------------------------------------------------------------

PROC_EXIT:

    {PROCEDURE_NAME} = {FUNCTION_RETURN_TYPE_PREFIX}Rtn

    ' Restore the application state
    ' -----------------------------
    Call SetApplicationProperties(udtAppProps)

    Call Trace(tlMaximum, msMODULE, sPROC, gsPROC_EXIT)
    On Error GoTo 0

    Exit {PROCEDURE_TYPE}

    ' ----------------------------------------------------------------------

PROC_ERR:

    If ErrorHandler(msMODULE, sPROC) Then
      Stop
      Resume
    Else
      Resume PROC_EXIT
    End If

[CODE_TEMPLATES]
CodeTemplateDescription1=Call Trap
CodeTemplateShortcut1=
CodeTemplateDescription2=Declare Constants
CodeTemplateShortcut2=
CodeTemplateDescription3=Declare Enumerations
CodeTemplateShortcut3=
CodeTemplateDescription4=Declare Events
CodeTemplateShortcut4=
CodeTemplateDescription5=Declare External Functions
CodeTemplateShortcut5=
CodeTemplateDescription6=Declare Interfaces
CodeTemplateShortcut6=
CodeTemplateDescription7=Declare Options
CodeTemplateShortcut7=
CodeTemplateDescription8=Declare Types
CodeTemplateShortcut8=
CodeTemplateDescription9=Declare Variables
CodeTemplateShortcut9=
CodeTemplateDescription10=Dim AppProps
CodeTemplateShortcut10=
CodeTemplateDescription11=Dim Array Variables
CodeTemplateShortcut11=
CodeTemplateDescription12=Dim MsgBox Variables
CodeTemplateShortcut12=
CodeTemplateDescription13=Do Loop Until
CodeTemplateShortcut13=
CodeTemplateDescription14=Do Loop While
CodeTemplateShortcut14=
CodeTemplateDescription15=Do Until Loop
CodeTemplateShortcut15=
CodeTemplateDescription16=Do While Loop
CodeTemplateShortcut16=
CodeTemplateDescription17=For Each Next
CodeTemplateShortcut17=
CodeTemplateDescription18=For Next
CodeTemplateShortcut18=
CodeTemplateDescription19=For Next Step
CodeTemplateShortcut19=
CodeTemplateDescription20=Global Level
CodeTemplateShortcut20=
CodeTemplateDescription21=Header Comments
CodeTemplateShortcut21=
CodeTemplateDescription22=Header Dependencies
CodeTemplateShortcut22=
CodeTemplateDescription23=Header Events
CodeTemplateShortcut23=
CodeTemplateDescription24=Header Module
CodeTemplateShortcut24=
CodeTemplateDescription25=Header Procedures
CodeTemplateShortcut25=
CodeTemplateDescription26=Header Properties
CodeTemplateShortcut26=
CodeTemplateDescription27=Header References
CodeTemplateShortcut27=
CodeTemplateDescription28=If Then Else If
CodeTemplateShortcut28=
CodeTemplateDescription29=IForm Starter
CodeTemplateShortcut29=
CodeTemplateDescription30=Line - Indented
CodeTemplateShortcut30=
CodeTemplateDescription31=Line - Long
CodeTemplateShortcut31=
CodeTemplateDescription32=Line = Long
CodeTemplateShortcut32=
CodeTemplateDescription33=Module Level
CodeTemplateShortcut33=
CodeTemplateDescription34=MsgBox
CodeTemplateShortcut34=
CodeTemplateDescription35=Private Declare PtrSafe
CodeTemplateShortcut35=
CodeTemplateDescription36=ScreenMousePointer
CodeTemplateShortcut36=
CodeTemplateDescription37=Select Case Else
CodeTemplateShortcut37=
CodeTemplateDescription38=UserForm_QueryClose
CodeTemplateShortcut38=
CodeTemplateDescription39=While Wend
CodeTemplateShortcut39=
CodeTemplateDescription40=With End With
CodeTemplateShortcut40=

[CODE_TEMPLATE_TEXT_1]
    Call Trap(msMODULE, sPROC, "Message")
[CODE_TEMPLATE_TEXT_2]
' -----------------------------------
' Constant declarations
' -----------------------------------
' Global Level
' ----------------

'Public Const GLOBAL_CONST As String = ""

' ----------------
' Module Level
' ----------------

Private Const msMODULE As String = "{MODULE_NAME}"

[CODE_TEMPLATE_TEXT_3]
' -----------------------------------
' Enumeration declarations
' -----------------------------------
' Global Level
' ----------------

'Public Enum enuGlobal
'    enuGItem = 0
'End Enum

' ----------------
' Module Level
' ----------------

'Private Enum enuMod
'    enuMItem = 0
'End Enum

[CODE_TEMPLATE_TEXT_4]
' -----------------------------------
' Event declarations
' -----------------------------------

'[Public] Event EventName(ByVal Arg As String)

[CODE_TEMPLATE_TEXT_5]
' -----------------------------------
' External Function declarations
' -----------------------------------
' Global Level
' ----------------

'#If Win64 Then
'    Private Declare PtrSafe _
'            Function <FunctionName> _
'            Lib "user32" _
'            Alias "" (ByVal hWnd As LongPtr) As LongPtr
'#Else
'    Private Declare _
'            Function <FunctionName> _
'            Lib "user32" _
'            Alias "" (ByVal hWnd As Long) As Long
'#End If

' ----------------
' Module Level
' ----------------

'#If Win64 Then
'  Private Declare PtrSafe _
'          Function <FunctionName> _
'          Lib "user32" _
'          Alias "" (ByVal hWnd As LongPtr) As LongPtr
'#Else
'  Private Declare _
'          Function <FunctionName> _
'          Lib "user32" _
'          Alias "" (ByVal hWnd As Long) As Long
'#End If

[CODE_TEMPLATE_TEXT_6]
' -----------------------------------
' Interface declarations
' -----------------------------------

Implements IUnknown

[CODE_TEMPLATE_TEXT_7]
' -----------------------------------
' Option statements
' -----------------------------------

'Option Base {0 | 1}
'Option Compare {Binary | Text | Database} ' Microsoft Access only
Option Explicit
'Option Private Module

[CODE_TEMPLATE_TEXT_8]
' -----------------------------------
' Type declarations
' -----------------------------------
' Global Level
' ----------------

'#If Win64 Then
'    Public Type TPublic
'        hWnd As LongPtr
'    End Type
'#Else
'    Public Type TPublic
'        hWnd As Long
'    End Type
'#End If

' ----------------
' Module Level
' ----------------

'#If Win64 Then
'    Public Type TPublic
'        hWnd As LongPtr
'    End Type
'#Else
'    Public Type TPublic
'        hWnd As Long
'    End Type
'#End If

[CODE_TEMPLATE_TEXT_9]
' -----------------------------------
' Variable declarations
' -----------------------------------
' Global Level
' ----------------

'Public gsVar as string

' ----------------
' Module Level
' ----------------

Private msVar as string

[CODE_TEMPLATE_TEXT_10]
    Dim udtAppProps As TApplicationProperties

    ' Save application state
    ' ----------------------
    Call GetApplicationProperties(udtAppProps)

    ' Restore the application state
    ' -----------------------------
    Call SetApplicationProperties(udtAppProps)

[CODE_TEMPLATE_TEXT_11]
    Dim lIdx        As Long
    Dim lLB         As Long
    Dim lUB         As Long
[CODE_TEMPLATE_TEXT_12]
    Dim sTitle      As String: sTitle = gsAPP_NAME
    Dim sPrompt     As String
    Dim eButtons    As VbMsgBoxStyle: eButtons = vbInformation Or vbOKOnly
    Dim eMBR        As VbMsgBoxResult

[CODE_TEMPLATE_TEXT_13]
    Do
        'Exit Do
    Loop Until (True)

[CODE_TEMPLATE_TEXT_14]
    Do
        'Exit Do
    Loop While (True)

[CODE_TEMPLATE_TEXT_15]
    Do Until (True)
        'Exit Do
    Loop
[CODE_TEMPLATE_TEXT_16]
    Do While (True)
        'Exit Do
    Loop

[CODE_TEMPLATE_TEXT_17]
    For Each Item In Collection
        'If True Then
        '    Exit For
        'End If
    Next Item

[CODE_TEMPLATE_TEXT_18]
    For lIdx = lLB To lUB
        'Exit For
    Next lIdx

[CODE_TEMPLATE_TEXT_19]
    For lIdx = lUB to lLB Step -1
        'Exit For
    Next lIdx

[CODE_TEMPLATE_TEXT_20]
' ----------------
' Global Level
' ----------------

[CODE_TEMPLATE_TEXT_21]
' --------------------------------------------------------------------------
' Comments    :

[CODE_TEMPLATE_TEXT_22]
' --------------------------------------------------------------------------
' Dependencies: XXX

[CODE_TEMPLATE_TEXT_23]
' --------------------------------------------------------------------------
' Events      : XXX

[CODE_TEMPLATE_TEXT_24]
' ==========================================================================
' Module      : {MODULE_NAME}
' Type        : {MODULE_TYPE}
' Description :

[CODE_TEMPLATE_TEXT_25]
' --------------------------------------------------------------------------
' Procedures  : XXX

[CODE_TEMPLATE_TEXT_26]
' --------------------------------------------------------------------------
' Properties  : XXX

[CODE_TEMPLATE_TEXT_27]
' --------------------------------------------------------------------------
' References  : XXX

[CODE_TEMPLATE_TEXT_28]
    If (True) Then
        'Code
    ElseIf (True) Then
        'Code
    Else
        'Code
    End If

[CODE_TEMPLATE_TEXT_29]
Public Property Get DialogResult() As VbMsgBoxResult
End Property

Public Property Get Tag() As String
End Property

Public Property Let Tag(ByVal Tag As String)
End Property

Public Sub Hide()
End Sub

Public Sub Show()
End Sub
[CODE_TEMPLATE_TEXT_30]
    ' ----------------------------------------------------------------------
[CODE_TEMPLATE_TEXT_31]
' --------------------------------------------------------------------------
[CODE_TEMPLATE_TEXT_32]
' ==========================================================================
[CODE_TEMPLATE_TEXT_33]
' ----------------
' Module Level
' ----------------

[CODE_TEMPLATE_TEXT_34]
    eMBR = MsgBox(sPrompt, eButtons, sTitle)

[CODE_TEMPLATE_TEXT_35]
#If VBA7 Then
    Private Declare PtrSafe _
            Function FuncName _
            Lib "user32" _
            Alias "FuncNameA" (ByVal hWnd As LongPtr) _
            As LongPtr
#Else
    Private Declare _
            Function FuncName _
            Lib "user32" _
            Alias "FuncNameA" (ByVal hWnd As Long) _
            As Long
#End If

[CODE_TEMPLATE_TEXT_36]

	Screen.MousePointer = vbHourGlass

	{I}

	Screen.MousePointer = vbDefault

[CODE_TEMPLATE_TEXT_37]
    Select Case Condition
    Case 0
        'Code
    Case Is <= 5
        'Code
    Case 6, 7
        'Code
    Case 8 To 10
        'Code
    Case Else
        'Code
    End Select

[CODE_TEMPLATE_TEXT_38]
' ==========================================================================
' Description : Clean up after use, and check for improper exit
'
' Params      : Cancel      Setting this argument to any value other than 0
'                           stops the QueryClose event in all loaded user
'                           forms and prevents the UserForm from closing.
'               CloseMode   Indicates the cause of the QueryClose event.
' ==========================================================================

    If (CloseMode <> vbFormCode) Then

        ' Prevent the form from unloading
        ' -------------------------------
        Cancel = True

        ' Use deault processing
        ' ---------------------
        Call cmdCancel_Click

    End If

[CODE_TEMPLATE_TEXT_39]
    While (True)
        'Code
    Wend

[CODE_TEMPLATE_TEXT_40]
    With Object
        'Code
    End With
